@using Microsoft.AspNetCore.Html

@model PaginatedList<WebApp1.Models.Movie>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    IHtmlContent RenderArrow(string data)
    {
        string sortOrder = ViewBag.CurrentSort;
        if (sortOrder.Split("_").First() != data.Split("_").First())
        {
            return Html.Raw(string.Empty);
        }

        switch (sortOrder)
        {
            case "title_desc":
            case "date_desc":
                return Html.Raw("&#8593;");
            case "title_asc":
            case "date_asc":
            default:
                return Html.Raw("&#8595;"); // down
        }
    }
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["TitleSortParm"]"
                   asp-route-pageNumber="@Model.PageIndex"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Title @RenderArrow(ViewData["TitleSortParm"].ToString())
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["DateSortParm"]"
                   asp-route-pageNumber="@Model.PageIndex"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Release Date @RenderArrow(ViewData["DateSortParm"].ToString())
                </a>
            </th>
            <th>
                Genre
            </th>
            <th>
                Price
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
